AWSTemplateFormatVersion: 2010-09-09
# This CloudFormation template deploys a basic VPC / Network.  Specifically:
# It deploys a VPC with 4 subnets (2 public, 2 private) across 2 Availability Zones
# A NAT Gateway is used to provide egress for private subnets.
# The VPC and subnets are exported for use by other stacks.
Parameters:
  VPCRange:
    Type: String
    Description: VPC CIDR Range
    Default: 10.1.0.0/16
  PubSubnetA:
    Type: String
    Description: Public Subnet A CIDR Range
    Default: 10.1.10.0/24
  PubSubnetB:
    Type: String
    Description: Public Subnet B CIDR Range
    Default: 10.1.20.0/24

Resources:
  # First, a VPC:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCRange
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
      - Key: Name
        Value:  !Join ['', [!Ref "AWS::StackName", "-VPC" ]]

  # Our VPC will need internet access:
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    DependsOn: VPC
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    # Notice how you can't attach an IGW to a VPC unless both are created:
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # Now some subnets, 2 public:
  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PubSubnetA
      AvailabilityZone: !Select [ 0, !GetAZs ]     #Get the first AZ in the list
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-Public-A
  PublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PubSubnetB
      AvailabilityZone: !Select [ 1, !GetAZs ]    # Get the second AZ in the list
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-Public-B
   
  # Some route tables for our subnets:
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: Public
  PublicRoute1:   # Public route table has direct routing to IGW:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  

  # Attach the public subnets to public route tables, 
  PublicSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetA
      RouteTableId: !Ref PublicRouteTable
  PublicSubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetB
      RouteTableId: !Ref PublicRouteTable


  # A NAT Gateway: 
  NATGateway:
    Type: AWS::EC2::NatGateway
    Properties: 
      AllocationId: !GetAtt ElasticIPAddress.AllocationId
      SubnetId: !Ref PublicSubnetA
      Tags: 
      - Key: Name
        Value: !Sub NAT-${AWS::StackName}
  ElasticIPAddress:
    Type: AWS::EC2::EIP
    Properties:
      Domain: VPC

Outputs:
  VpcId:
    Description: VPCId of newly created VPC
    Value: !Ref VPC
    Export:
      Name: "VpcId"
#-------for root stack----------#
  InternetGateway:
    Description: Internet Gateway
    Value: !Ref 'InternetGateway'
  AttachGateway:
    Description: Attach Gateway
    Value: !Ref 'AttachGateway'
#-------not only for root stack----------#
  SubnetA:
    Description: Public SubnetA Id of newly created Subnet
    Value: !Ref PublicSubnetA
    Export: 
      Name: "SubnetA"
  SubnetB:
    Description: Public SubnetB Id of newly created Subnet
    Value: !Ref PublicSubnetB
    Export: 
      Name: "SubnetB"
#-------for root stack----------#
  PublicRouteTable:
    Description: Public Route Table
    Value: !Ref 'PublicRouteTable'
  PublicRoute1:
    Description: Public route table has direct routing to IGW
    Value: !Ref 'PublicRoute1'
  PublicSubnetARouteTableAssociation:
    Description: Attach the public subnets to public route tables
    Value: !Ref 'PublicSubnetARouteTableAssociation'
  PublicSubnetBRouteTableAssociation:
    Description: Attach the public subnets to public route tables
    Value: !Ref 'PublicSubnetBRouteTableAssociation'
  NATGateway:
    Description: NAT Gateway
    Value: !Ref 'NATGateway'
  ElasticIPAddress:
    Description: Elastic IP Address
    Value: !Ref 'ElasticIPAddress'